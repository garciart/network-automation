[gns3user@localhost dev]$ python
Python 2.7.5 (default, Nov 16 2020, 22:23:17)
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import pexpect
>>> child = pexpect.spawn("telnet 192.168.1.1 5001")
>>> child.expect("Press RETURN to get started")
0
>>> child.sendline("\r")
2
>>> child.expect("R1#")
0
>>> child.sendline("show version\r")
14
>>> index = child.expect(["R1#", "--More--", ])
>>> print(index)
1
>>> if index == 1:
...     child.sendline(" ")
...     child.expect("R1#")
...
2
0
>>> print(child.before)
to comply with U.S. and local laws, return this product immediately.

A summary of U.S. laws governing Cisco cryptographic products may be found at:
http://www.cisco.com/wwl/export/crypto/tool/stqrg.html

If you require further assistance please contact us by sending email to
export@cisco.com.

Cisco 3745 (R7000) processor (revision 2.0) with 249856K/12288K bytes of memory.
Processor board ID FTX0945W0MY
R7000 CPU at 350MHz, Implementation 39, Rev 2.1, 256KB L2, 512KB L3 Cache
2 FastEthernet interfaces
DRAM configuration is 64 bits wide with parity enabled.
151K bytes of NVRAM.
65536K bytes of ATA System CompactFlash (Read/Write)

Configuration register is 0x2102


>>> child.sendline("\r")
2
>>> child.expect("Automation is fun!")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/lib/python2.7/site-packages/pexpect.py", line 1311, in expect
    return self.expect_list(compiled_pattern_list, timeout, searchwindowsize)
  File "/usr/lib/python2.7/site-packages/pexpect.py", line 1325, in expect_list
    return self.expect_loop(searcher_re(pattern_list), timeout, searchwindowsize)
  File "/usr/lib/python2.7/site-packages/pexpect.py", line 1409, in expect_loop
    raise TIMEOUT (str(e) + '\n' + str(self))
pexpect.TIMEOUT: Timeout exceeded in read_nonblocking().
<pexpect.spawn object at 0x7f067d5d1f90>
version: 2.3 ($Revision: 399 $)
command: /usr/bin/telnet
args: ['/usr/bin/telnet', '192.168.1.1', '5001']
searcher: searcher_re:
    0: re.compile("Automation is fun!")
buffer (last 100 chars):
R1#
before (last 100 chars):
R1#
after: <class 'pexpect.TIMEOUT'>
match: None
match_index: None
exitstatus: None
flag_eof: False
pid: 24771
child_fd: 3
closed: False
timeout: 30
delimiter: <class 'pexpect.EOF'>
logfile: None
logfile_read: None
logfile_send: None
maxread: 2000
ignorecase: False
searchwindowsize: None
delaybeforesend: 0.05
delayafterclose: 0.1
delayafterterminate: 0.1
>>> child.sendline("\r")
2
>>> index = child.expect(["Automation is fun!", pexpect.TIMEOUT, ])
>>> if index != 0:
...     print("I cannot find the search string!")
...
I cannot find the search string!
>>> child.sendline("\r")
2
>>> child.expect("R1#")
0
>>> exit()
[gns3user@localhost dev]$