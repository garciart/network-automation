
Need to research:
http://www.gns3.xyz/files/Downloads/
https://docs.gns3.com/docs/using-gns3/beginners/switching-and-gns3/


Add the router to the templates (need to explain: https://docs.gns3.com/docs/using-gns3/beginners/switching-and-gns3/#using-a-c3725-as-an-etherswitch-router)

Use FastEthernet0/0 or FastEthernet0/1 (they are routed ports, not switchports)


Configure the router:
Method 1 (auto)
Right click on the router -> Import config
File to import? configs/il_startup-config.cfg -> OK
Find and select R1_3745_il_startup-config.cfg -> Open
Right click on the router -> Start (DO NOT RELOAD)
Wait 60 seconds
Go to "Ping the Router"

Method 2 (manual)
Start the router node, right click and open a console:

Router>enable ! en
Router#show ip interface ! Should not be empty
Router#show ip interface FastEthernet0/0 ! show ip int f0/0
FastEthernet0/0 is administratively down, line protocol is down
  Internet protocol processing disabled
Router#configure terminal ! conf t
Enter configuration commands, one per line. End with CNTL/Z.
Router(config)#hostname R1 ! May already be named R1
R1(config)#interface FastEthernet0/0 ! int f0/0
R1(config-if)#ip address 192.168.1.10 255.255.255.0
R1(config-if)#no shutdown ! no shut
R1(config-if)#
MMM DD HH:MM:SSS.SSS: %LINK-3-UPDOWN: Interface FastEthernet0/0, changed state to up 
MMM DD HH:MM:SSS.SSS: %LINEPROTO-5-UPDOWN: Line protocol on Interface FastEthernet0/0, changed state to up
R1(config-if)#end
R1#
MMM DD HH:MM:SSS.SSS: %SYS-5-CONFIG_I: Configured from console by console


*** SAVE THIS FOR A LAB ***
R1#conf t
R1(config)#enable password cisco
R1(config)#line vty 0 15 ! Virtual teletype with 0 to 15 connections
R1(config-line)#username admin password cisco
R1(config)#end
MMM DD HH:MM:SSS.SSS: %SYS-5-CONFIG_I: Configured from console by console
R1#write memory ! wr / May have to use "copy running config to startup config" or "copy run start" on newer devices
Building configuration...
[OK]



PING ROUTER

R1#show ip int f0/0 ! Optional; just checking that everything went through
FastEthernet0/0 is up, line protocol is up
  Internet address is 192.168.1.10
  ...
  WCCP Redirect exclude is disabled
R1#ping 192.168.1.1 ! Ping host from GNS3 router

Type escape sequence to abort.
Sending 5, 100-byte ICMP Echos to 192.168.1.1, timeout is 2 seconds:
.!!!!
Success rate is 80 percent (4/5), round-trip min/avg/max = 8/10/12 ms
R1#exit

Close the console and open a terminal. Attempt to ping the router...

$ ping -c 4 192.168.1.10 # Ping GNS3 router from Terminal
PING 192.168.1.1 (192.168.1.10) 56(84) bytes of data.
64 bytes from 192.168.1.10: icmp_seq=1 ttl=255 time=2.05 ms
64 bytes from 192.168.1.10: icmp_seq=2 ttl=255 time=5.16 ms
64 bytes from 192.168.1.10: icmp_seq=3 ttl=255 time=10.7 ms
64 bytes from 192.168.1.10: icmp_seq=4 ttl=255 time=5.30 ms

--- 192.168.1.10 ping statistics ---
4 packets transmitted, 4 received, 0% packet loss, time 3006ms
rtt min/avg/max/mdev = 2.050/5.830/10.797/3.150 ms

Next, telnet into the router:
$ telnet 192.168.1.10
Trying 192.168.1.10
Escape character is '^]'.


User Access Verification

Password: (enter "cisco")
R1> (enter "exit" to quit)
Connection closed by foreign host.


Note for Lab 3: Any issues, use vi to remove all reference to 192.168.1.10 in /home/wrsuser1/.ssh/known_hosts
    Also, access the router from the terminal using "ssh admin@192.168.1.10"; password is "cisco"



Thanks to 
David Bombal at https://www.youtube.com/playlist?list=PLhfrWIlLOoKPn7T9FtvbOWX8GxgsFFNwn
Sudheer Vishwakarma at https://www.youtube.com/watch?v=nFIsisg3uvg&ab_channel=SudheerVishwakarma

-------

You can also create a user during installation, or later using the Terminal, to avoid using the root user:

    [root@localhost ~]# adduser gns3user
    [root@localhost ~]# passwd gns3user
    Changing password for user gns3user.
    New password: ************
    Retype new password: ************
    passwd: all authentication tokens updated successfully.
    [root@localhost ~]# gpasswd -a gns3user wheel
    Adding user gns3user to group wheel
    [root@localhost ~]# su - gns3user
    [gns3user@localhost ~]$

You can also connect to the Internet during setup, or if you want to use the Terminal to connect using an existing WiFi access point, instead of an ethernet cable, use the Network Manager Text User Interface (nmtuui):

    [gns3user@localhost ~]$ chkconfig NetworkManager on
    Note: Forwarding request to 'systemctl enable NetworkManager.service'.
    ==== AUTHENTICATING FOR org.freedesktop.systemd1.manage-unit-files ===
    Authentication is required to manage system services or unit files.
    Authenticating as: gns3user
    Password: ************ 
    ==== AUTHENTICATION COMPLETE ===
    ==== AUTHENTICATING FOR org.freedesktop.systemd1.reload-daemon ===
    Authentication is required to reload the systemd state.
    Authenticating as: gns3user
    Password: ************
    ==== AUTHENTICATION COMPLETE ===
    [gns3user@localhost ~]$ service NetworkManager start
    ==== AUTHENTICATING FOR org.freedesktop.systemd1.manage-units ===
    Authentication is required to manage system services or units.
    Authenticating as: gns3user
    Password: ************
    ==== AUTHENTICATION COMPLETE ===
    [gns3user@localhost ~]$ nmtui

The TUI should appear. Select "Activate a Connection" and find your AP. Enter your password; you should then be connected.

![Using nmtui](images/centos03.png)

----------

![Using nmtui](images/centos04.png)




Give the interface an IPv4 address, by inputting ```sudo ip addr add 192.168.1.1/24 dev enp0s8```. By the way, modifying interfaces requires elevated privileges, so enter your password if prompted. Do not forget to add the subnet (```/24```), or the ```ip``` program, by default, will set a netmask of 255.255.255.255 (```/32```), which will allow only one host on the isolated network, instead of a netmask of 255.255.255.0  (```/24```), which will allow the 256 hosts we want:

```
sudo ip addr add 192.168.1.1/24 dev enp0s8
```

Verify the interface's IP address, by inputting ```ip addr show enp0s8```:

$ ip addr show enp0s8

3: enp0s8: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000
    link/ether 08:00:27:87:ff:e2 brd ff:ff:ff:ff:ff:ff
    inet 192.168.1.1/24 scope global enp0s8
       valid_lft forever preferred_lft forever
```


Create a Layer 2 virtual network interface, known as a TAP (https://www.naturalborncoder.com/virtualization/2014/10/17/understanding-tun-tap-interfaces/).


sudo ip tuntap add tap0 mode tap # Add the tap device
sudo ifconfig tap0 0.0.0.0 promisc up # Configure the tap
sudo ifconfig enp0s8 0.0.0.0 promisc up # Zero out the default Ethernet connection
sudo brctl addbr br0 # Create the bridge
sudo brctl addif br0 tap0 # Add the tap to the bridge
sudo brctl addif br0 enp0s8 # Add the default Ethernet connection to the bridge
sudo ifconfig br0 up # Start the bridge
sudo ifconfig br0 192.168.1.1/24 # Configure the bridge

ifconfig # Verify the devices exist
sudo brctl show br0 # Verify the bridge is set up

sudo ifconfig br0 down # Stop the bridge
sudo brctl delif br0 enp0s8 # Remove the default Ethernet connection from the bridge
sudo brctl delif br0 tap0 # Remove the tap from the bridge
sudo brctl delbr br0 # Delete the bridge
sudo ifconfig tap0 down # Stop the tap
sudo ip link delete tap0 # Delete the tap

# Reset the default Ethernet connection
sudo ifconfig enp0s8 -promisc
sudo systemctl restart network # Check your OS; may use service networking restart 

sudo systemctl status network
ifconfig # Verify the result